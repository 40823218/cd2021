var tipuesearch = {"pages": [{'title': 'About', 'text': '個人倉儲: https://github.com/40823218/cd2021 \n stage1-bg5:製作曲柄滑塊壓罐機 \n 使用軟體:solidworks2017 coppeliasim \n 分組倉儲: https://github.com/40823218/stage1-bg5 \n 分組網站: https://40823218.github.io/stage1-bg5/content/About.html \n gitter: https://gitter.im/cd2021-bg5/community \n stage2-bg7:乒乓球發球機 \n 使用軟體:solidworks2017 coppeliasim \n 分組倉儲: https://github.com/40823218/stage2-bg7 \n 分組網站: https://40823238.github.io/stage2-bg7/content/index.html \n gitter: https://gitter.im/stage2-bg7/community \n discord: https://discord.com/invite/xkhgSc9aWb \n stage3-bg6:鍵盤控制機械手臂 \n 使用軟體:solidworks2017 coppeliasim OBS \n 分組倉儲: https://github.com/40823225/stage3-bg6 \n 分組網站: https://40823225.github.io/stage3-bg6/content/About.html \n gitter: \n discord: https://discord.com/invite/xkhgSc9aWb \n \n \n', 'tags': '', 'url': 'About.html'}, {'title': 'W1', 'text': '新增倉儲 架設小組及個人網頁 \n \n', 'tags': '', 'url': 'W1.html'}, {'title': 'W2', 'text': '原題目是要製作一個間歇運動的機構，下為繪製機構的齒輪零件。 \n 繪製零件圖: \n 如何在SOLIDWORKS中呼叫齒輪 \n \n 特殊齒輪 \n \n 正齒輪 \n \n', 'tags': '', 'url': 'W2.html'}, {'title': '修改圖檔', 'text': '', 'tags': '', 'url': '修改圖檔.html'}, {'title': 'W3繪製零件圖', 'text': '更改題目後繪製零件圖: \n solidworks 作動測試影片 \n \n 組合圖 \n \n 圓盤 \n 曲柄機構的曲柄，由第一個參考資料可得知，滑塊之行程為曲柄長度的兩倍，行程必須大於一個鋁罐。 \n \n 連桿 \n \n 底座 \n \n 滑塊 \n \n 滑軌 \n \n', 'tags': '', 'url': 'W3繪製零件圖.html'}, {'title': '0312修改圖檔', 'text': '經過量測後，鋁罐約為直徑60mm高110mm之圓柱，因此加寬了滑軌的寬度 \n 修改後載點: 鋁罐   滑塊   滑軌   組合圖 \n \n \n \n', 'tags': '', 'url': '0312修改圖檔.html'}, {'title': '0313修改圖檔', 'text': '一開始放入coppeliasim開啟動力學特性後，零件就會全部解體，因此在修改一次圖檔 \n 組合圖 \n \n 再組合時面和面應要留有間隙避免發生干涉 \n \n 在銷前加入檔板，防止零件滑出 \n \n \n 滑軌 \n \n 將滑軌溝槽高度改為1.5mm，避免模擬時產生干涉 \n \n 零件載點: https://40823218.github.io/stage1-bg5/content/0313.html \n', 'tags': '', 'url': '0313修改圖檔.html'}, {'title': '模擬', 'text': '', 'tags': '', 'url': '模擬.html'}, {'title': 'stage1-bg5-1', 'text': '將零件檔放入coppeliasim進行模擬 \n \n coppeliasim模擬檔案 \n', 'tags': '', 'url': 'stage1-bg5-1.html'}, {'title': 'stage2-bg7-1', 'text': '', 'tags': '', 'url': 'stage2-bg7-1.html'}, {'title': '0412模擬(無球)', 'text': 'CoppelisaSim檔案下載: https://drive.google.com/file/d/1py0BHoKMlVCEvJfn7cyLHaJK2n14c_m1/view?usp=sharing \n \n', 'tags': '', 'url': '0412模擬(無球).html'}, {'title': '0413模擬(有球)', 'text': 'CoppelisaSim檔案下載: https://drive.google.com/file/d/15tYq9ufaD22cAnGwqmCR1SU-TwF0cQ6G/view?usp=sharing \n \n', 'tags': '', 'url': '0413模擬(有球).html'}, {'title': '0415模擬', 'text': '因上次模擬失敗，經過修改尺寸後重新進行模擬。 \n CoppelisaSim檔案下載: https://drive.google.com/file/d/1YWdvvi25aMz-AP9vr7GxXkrPSO2RPFI0/view?usp=sharing \n \n', 'tags': '', 'url': '0415模擬.html'}, {'title': '0416模擬', 'text': 'CoppelisaSim檔案下載: https://drive.google.com/file/d/1g_bpdxLU1_pywdjowKo6yeOXV9ubbE1K/view?usp=sharing \n 因前幾次模擬球都會亂飛，這次加上噴嘴。 \n \n 雖然修改了籃子，不過卡球問題還是沒解決。 \n \n', 'tags': '', 'url': '0416模擬.html'}, {'title': '0422模擬', 'text': 'CoppelisaSim檔案下載: https://drive.google.com/file/d/1zCZRo2_0T8kJSp4S2QMp4amKAJA1G6jz/view?usp=sharing \n 將籃子改為管子，解決了卡球的問題。 \n \n 所有模擬檔+STL下載: https://drive.google.com/file/d/1t_C7udINVkFZDzwG3aTY2GM2_Zf70nkG/view?usp=sharing \n \n', 'tags': '', 'url': '0422模擬.html'}, {'title': 'stage3-bg6', 'text': '', 'tags': '', 'url': 'stage3-bg6.html'}, {'title': '0513', 'text': '嘗試用remoteAPI鍵盤控制機械手臂，不過手臂上段模擬時出現甩動問題，因此只展示下半部分。 \n \n \n \n 程式碼 \n # File created by Thibaut Royer, Epitech school\n# thibaut1.royer@epitech.eu\n# It intends to be an example program for the "Two wheels, one arm" educative project.\n \nimport sim as vrep\nimport math\nimport random\nimport time\nimport keyboard\n \nprint (\'Start\')\n \n# Close eventual old connections\nvrep.simxFinish(-1)\n# Connect to V-REP remote server\nclientID = vrep.simxStart(\'192.168.0.4\', 19997, True, True, 5000, 5)\n \nif clientID != -1:\n    print (\'Connected to remote API server\')\n     \n    res = vrep.simxAddStatusbarMessage(\n        clientID, "40823218",\n        vrep.simx_opmode_oneshot)\n    if res not in (vrep.simx_return_ok, vrep.simx_return_novalue_flag):\n        print("Could not add a message to the status bar.")\n \n    # Communication operating mode with the remote API : wait for its answer before continuing (blocking mode)\n    # http://www.coppeliarobotics.com/helpFiles/en/remoteApiConstants.htm\n    opmode = vrep.simx_opmode_oneshot_wait\n    STREAMING = vrep.simx_opmode_streaming\n \n    # Try to retrieve motors and robot handlers\n    # http://www.coppeliarobotics.com/helpFiles/en/remoteApiFunctionsPython.htm#simxGetObjectHandle\n    vrep.simxStartSimulation(clientID, opmode)\n    ret,base_handle=vrep.simxGetObjectHandle(clientID,"joint1_",opmode)\n    ret,bottom_handle=vrep.simxGetObjectHandle(clientID,"joint2_",opmode)\n    ret,top_handle=vrep.simxGetObjectHandle(clientID,"joint3_",opmode)\n    ret,rotate_handle=vrep.simxGetObjectHandle(clientID,"joint4_",opmode)\n    ret,wrist_handle=vrep.simxGetObjectHandle(clientID,"joint5_",opmode)\n    while True:\n        #Clockwise\n        if keyboard.is_pressed("a"):\n         vrep.simxSetJointTargetVelocity(clientID,base_handle,0.1,opmode)\n        #anti-Clockwise \n        if keyboard.is_pressed("f"):\n         vrep.simxSetJointTargetVelocity(clientID,base_handle,-0.1,opmode)\n        #bottom_handle up\n        if keyboard.is_pressed ("w"):\n         vrep.simxSetJointTargetVelocity(clientID,bottom_handle,0.1,opmode)\n        #bottom_handle down\n        if keyboard.is_pressed ("s"):\n         vrep.simxSetJointTargetVelocity(clientID,bottom_handle,-0.1,opmode)\n         #top_handle up\n        if keyboard.is_pressed ("e"):\n         vrep.simxSetJointTargetVelocity(clientID,top_handle,0.1,opmode)\n         #top_handle down\n        if keyboard.is_pressed ("d"):\n         vrep.simxSetJointTargetVelocity(clientID,top_handle,-0.1,opmode)\n         #rotate\n        if keyboard.is_pressed ("r"):\n         vrep.simxSetJointTargetVelocity(clientID,rotate_handle,0.1,opmode)\n         #wrist_handle left\n        if keyboard.is_pressed ("j"):\n         vrep.simxSetJointTargetVelocity(clientID,wrist_handle,0.1,opmode)\n         #wrist_handle right\n        if keyboard.is_pressed ("k"):\n         vrep.simxSetJointTargetVelocity(clientID,wrist_handle,-0.1,opmode)\n         #stop\n        if keyboard.is_pressed ("space"):\n         vrep.simxSetJointTargetVelocity(clientID,base_handle,0,opmode)\n         vrep.simxSetJointTargetVelocity(clientID,bottom_handle,0,opmode)\n         vrep.simxSetJointTargetVelocity(clientID,top_handle,0,opmode)\n         vrep.simxSetJointTargetVelocity(clientID,rotate_handle,0,opmode)\n         vrep.simxSetJointTargetVelocity(clientID,wrist_handle,0,opmode)\n \n \nelse:\n    print (\'Failed connecting to remote API server\')\n    print (\'End\') \n', 'tags': '', 'url': '0513.html'}, {'title': '0517', 'text': '經過修改後成功模擬 \n 操作前必須安裝 python keyboard \n 檔案下載: https://drive.google.com/file/d/1FErGMzyfP5MTvf8cLc1Ox2xHJhuDN1XH/view?usp=sharing \n \n \xa0 \n 程式碼 \n # File created by Thibaut Royer, Epitech school\n# thibaut1.royer@epitech.eu\n# It intends to be an example program for the "Two wheels, one arm" educative project.\n  \nimport sim as vrep\nimport math\nimport random\nimport time\nimport keyboard\n  \nprint (\'Start\')\n  \n# Close eventual old connections\nvrep.simxFinish(-1)\n# Connect to V-REP remote server\nclientID = vrep.simxStart(\'192.168.0.4\', 19997, True, True, 5000, 5)\n  \nif clientID != -1:\n    print (\'Connected to remote API server\')\n      \n    res = vrep.simxAddStatusbarMessage(\n        clientID, "40823218",\n        vrep.simx_opmode_oneshot)\n    if res not in (vrep.simx_return_ok, vrep.simx_return_novalue_flag):\n        print("Could not add a message to the status bar.")\n  \n    # Communication operating mode with the remote API : wait for its answer before continuing (blocking mode)\n    # http://www.coppeliarobotics.com/helpFiles/en/remoteApiConstants.htm\n    opmode = vrep.simx_opmode_oneshot_wait\n    STREAMING = vrep.simx_opmode_streaming\n  \n    # Try to retrieve motors and robot handlers\n    # http://www.coppeliarobotics.com/helpFiles/en/remoteApiFunctionsPython.htm#simxGetObjectHandle\n    vrep.simxStartSimulation(clientID, opmode)\n    ret,base_handle=vrep.simxGetObjectHandle(clientID,"joint1",opmode)\n    ret,bottom_handle=vrep.simxGetObjectHandle(clientID,"joint2",opmode)\n    ret,top_handle=vrep.simxGetObjectHandle(clientID,"joint3",opmode)\n    ret,rotate_handle=vrep.simxGetObjectHandle(clientID,"joint4",opmode)\n    ret,wrist_handle=vrep.simxGetObjectHandle(clientID,"joint5",opmode)\n    while True:\n        #Clockwise\n        if keyboard.is_pressed("a"):\n         vrep.simxSetJointTargetVelocity(clientID,base_handle,0.2,opmode)\n        #anti-Clockwise \n        if keyboard.is_pressed("f"):\n         vrep.simxSetJointTargetVelocity(clientID,base_handle,-0.2,opmode)\n        #bottom_handle up\n        if keyboard.is_pressed ("w"):\n         vrep.simxSetJointTargetVelocity(clientID,bottom_handle,0.2,opmode)\n        #bottom_handle down\n        if keyboard.is_pressed ("s"):\n         vrep.simxSetJointTargetVelocity(clientID,bottom_handle,-0.2,opmode)\n         #top_handle up\n        if keyboard.is_pressed ("e"):\n         vrep.simxSetJointTargetVelocity(clientID,top_handle,0.2,opmode)\n         #top_handle down\n        if keyboard.is_pressed ("d"):\n         vrep.simxSetJointTargetVelocity(clientID,top_handle,-0.2,opmode)\n         #rotate\n        if keyboard.is_pressed ("r"):\n         vrep.simxSetJointTargetVelocity(clientID,rotate_handle,0.2,opmode)\n         #wrist_handle left\n        if keyboard.is_pressed ("j"):\n         vrep.simxSetJointTargetVelocity(clientID,wrist_handle,0.2,opmode)\n         #wrist_handle right\n        if keyboard.is_pressed ("k"):\n         vrep.simxSetJointTargetVelocity(clientID,wrist_handle,-0.2,opmode)\n         #stop\n        if keyboard.is_pressed ("space"):\n         vrep.simxSetJointTargetVelocity(clientID,base_handle,0,opmode)\n         vrep.simxSetJointTargetVelocity(clientID,bottom_handle,0,opmode)\n         vrep.simxSetJointTargetVelocity(clientID,top_handle,0,opmode)\n         vrep.simxSetJointTargetVelocity(clientID,rotate_handle,0,opmode)\n         vrep.simxSetJointTargetVelocity(clientID,wrist_handle,0,opmode)\n  \n  \nelse:\n    print (\'Failed connecting to remote API server\')\n    print (\'End\')\n \n', 'tags': '', 'url': '0517.html'}, {'title': '分組報告', 'text': '', 'tags': '', 'url': '分組報告.html'}, {'title': 'stage1-bg5-2', 'text': '分工部分:建立倉儲及架設網站，編輯網站，找尋參考資料，繪製SolidWorks零件圖，Coppeliasim模擬，Reveal製作。 \n \n', 'tags': '', 'url': 'stage1-bg5-2.html'}, {'title': 'stage2-bg7-2', 'text': '分工部分:編輯網站，繪製SolidWorks零件圖，Coppeliasim模擬。 \n \n \n \xa0 \n', 'tags': '', 'url': 'stage2-bg7-2.html'}, {'title': 'W5', 'text': '2b報告影片時間表 \n \n', 'tags': '', 'url': 'W5.html'}, {'title': 'W7', 'text': '', 'tags': '', 'url': 'W7.html'}, {'title': 'stage2發球機構圖', 'text': '因不知CoppeliaSim能否模擬發球機發球，先簡單構圖模擬。 \n 組合圖 \xa0連結可下載檔案 \n \n 為了要將球發射出去，將兩圓筒最近距離設為和乒乓球相同的40mm \n 底座和軌道 \n \n 圓筒 \n \n', 'tags': '', 'url': 'stage2發球機構圖.html'}, {'title': 'CoppeliaSim模擬', 'text': '模擬檔案下載: https://drive.google.com/file/d/12AT3t7wfKkKWZwZ15KEAG74njWn7D8ro/view?usp=sharing \n 因要將球射出，加大馬達扭力後，造成圓筒晃動。 \n \n \n', 'tags': '', 'url': 'CoppeliaSim模擬.html'}, {'title': 'task', 'text': '', 'tags': '', 'url': 'task.html'}, {'title': 'task1', 'text': '參考資料: \n 40823251 Task1: https://40823251.github.io/cd2021/content/task1.html \n MDE Task1: http://mde.tw/cd2021/content/task1.html \n 為何要return: https://zhidao.baidu.com/question/1823346800411250748.html \n 檔案下載: https://drive.google.com/file/d/1BoW9TrUODKVNYHYCwHsoCZIWbOIm7nZW/view?usp=sharing \n 執行影片 \n \n \n \n 程式碼 \n def stage32b(num):\n     if num[0:3] == "407":\n         return "s" + num\n     elif num == "40823231":\n         return num + "-2"\n     else :\n         return num\n\nteamb = []\n\nwith open("stage3_2b.txt") as fh:\n    \n    data = fh.readlines()\n\nfor i in range(len(data)):\n    group = data[i].rstrip("\\n").split("\\t")\n    teamb.append(group)\n \noutput = ""        \nseperator = "-"*10 + "<br />"\n\nfor i in teamb[0:]:\n    team = i[0]\n    leader = stage32b(i[1])\n    m1 = stage32b(i[3])\n    m2 = stage32b(i[5])\n    m3 = stage32b(i[7])\n    m4 = stage32b(i[9])\n    m5 = stage32b(i[11])\n    m6 = stage32b(i[13])\n      \n    try:\n        m7 = stage32b(i[15])\n    except:\n        m7 = ""\n    try:\n        m8 = stage32b(i[17])\n    except:\n        m8 = ""\n          \n    leaderrepo = "<a href=\'http://github.com/" + leader + "/cd2021\'>" + leader + " repo</a>"\n    leadersite = "<a href=\'http://" + leader + ".github.io/cd2021\'>" + leader +  " site</a>"\n    m1repo = "<a href=\'http://github.com/" + m1 + "/cd2021\'>" + m1 + " repo</a>"\n    m1site = "<a href=\'http://" + m1 + ".github.io/cd2021\'>" + m1 +  " site</a>"\n    m2repo = "<a href=\'http://github.com/" + m2 + "/cd2021\'>" + m2 + " repo</a>"\n    m2site = "<a href=\'http://" + m2 + ".github.io/cd2021\'>" + m2 +  " site</a>"\n    m3repo = "<a href=\'http://github.com/" + m3 + "/cd2021\'>" + m3 + " repo</a>"\n    m3site = "<a href=\'http://" + m3 + ".github.io/cd2021\'>" + m3 +  " site</a>"\n    m4repo = "<a href=\'http://github.com/" + m4 + "/cd2021\'>" + m4 + " repo</a>"\n    m4site = "<a href=\'http://" + m4 + ".github.io/cd2021\'>" + m4 +  " site</a>"\n    m5repo = "<a href=\'http://github.com/" + m5 + "/cd2021\'>" + m5 + " repo</a>"\n    m5site = "<a href=\'http://" + m5 + ".github.io/cd2021\'>" + m5 +  " site</a>"\n    m6repo = "<a href=\'http://github.com/" + m6 + "/cd2021\'>" + m6 + " repo</a>"\n    m6site = "<a href=\'http://" + m6 + ".github.io/cd2021\'>" + m6 +  " site</a>"\n   \n  \n    teamrepo = "<a href=\'http://github.com/" + leader + "/" + team + "\'>" + team + " repo</a>"\n    teamsite =  "<a href=\'http://" + m1 + ".github.io/" + team + "\'>" + team +  " site</a>"\n  \n    output += teamrepo + " | " + teamsite + " | " +leaderrepo + " | " + leadersite + " | " +m1repo + " | " + m1site + " | " +m2repo + " | " + m2site + " | " +m3repo + " | " + m3site + " | " +m4repo + " | " + m4site + " | " +m5repo + " | " + m5site + " | " +m6repo + " | " + m6site \n      \n    if m7 != "":\n       m7repo = "<a href=\'http://github.com/" + m7 + "/cd2021\'>" + m7 + " repo</a>"\n       m7site = "<a href=\'http://" + m7 + ".github.io/cd2021\'>" + m7 +  " site</a>"  \n       output += " |  " + m7repo + "| " + m7site\n    else:\n        output += "" \n      \n    if m8 != "":\n       m8repo = "<a href=\'http://github.com/" + m8 + "/cd2021\'>" + m8 + " repo</a>"\n       m8site = "<a href=\'http://" + m8 + ".github.io/cd2021\'>" + m8 +  " site</a>"  \n       output += " |  " + m8repo + "| " + m8site + "<br />" + seperator\n    else:\n        output += "<br />" + seperator\n  \n  \nprint(output)\n \n stage3-bg1 repo  |  stage3-bg1 site  |  40823245 repo  |  40823245 site  |  40823251 repo  |  40823251 site  |  40823208 repo  |  40823208 site  |  40823213 repo  |  40823213 site  |  40823232 repo  |  40823232 site  |  40823234 repo  |  40823234 site  |  40823235 repo  |  40823235 site  |  40823246 repo |  40823246 site ---------- stage3-bg2 repo  |  stage3-bg2 site  |  40823217 repo  |  40823217 site  |  40823201 repo  |  40823201 site  |  40823209 repo  |  40823209 site  |  40823210 repo  |  40823210 site  |  40823206 repo  |  40823206 site  |  40823207 repo  |  40823207 site  |  40823223 repo  |  40823223 site  |  40823224 repo |  40823224 site ---------- stage3-bg3 repo  |  stage3-bg3 site  |  40823236 repo  |  40823236 site  |  40823202 repo  |  40823202 site  |  40823203 repo  |  40823203 site  |  40823212 repo  |  40823212 site  |  40823219 repo  |  40823219 site  |  40823222 repo  |  40823222 site  |  40823231-2 repo  |  40823231-2 site  |  40823244 repo |  40823244 site ---------- stage3-bg4 repo  |  stage3-bg4 site  |  40823239 repo  |  40823239 site  |  s40723140 repo  |  s40723140 site  |  s40723128 repo  |  s40723128 site  |  s40723139 repo  |  s40723139 site  |  s40723106 repo  |  s40723106 site  |  s40723135 repo  |  s40723135 site  |  s40723143 repo  |  s40723143 site  |  s40723215 repo |  s40723215 site ---------- stage3-bg5 repo  |  stage3-bg5 site  |  40823221 repo  |  40823221 site  |  40823204 repo  |  40823204 site  |  40823205 repo  |  40823205 site  |  40823220 repo  |  40823220 site  |  40823228 repo  |  40823228 site  |  40823237 repo  |  40823237 site  |  40823242 repo  |  40823242 site  |  40823250 repo |  40823250 site  |  40832244 repo |  40832244 site ---------- stage3-bg6 repo  |  stage3-bg6 site  |  40823225 repo  |  40823225 site  |  40823214 repo  |  40823214 site  |  40823218 repo  |  40823218 site  |  40823211 repo  |  40823211 site  |  40823248 repo  |  40823248 site  |  40823247 repo  |  40823247 site  |  40823216 repo  |  40823216 site  |  40823238 repo |  40823238 site ---------- stage3-bg7 repo  |  stage3-bg7 site  |  40623144 repo  |  40623144 site  |  40823233 repo  |  40823233 site  |  s40723224 repo  |  s40723224 site  |  40823241 repo  |  40823241 site  |  40423155 repo  |  40423155 site  |  40823227 repo  |  40823227 site  |  s40723233 repo  |  s40723233 site ---------- \n', 'tags': '', 'url': 'task1.html'}, {'title': 'task2', 'text': '參考資料: \n 40823246 Task2: https://40823246.github.io/cd2021/content/task2.html \n MDE Task2: http://mde.tw/cd2021/content/task2.html \n while loop說明: https://blog.csdn.net/geerniya/article/details/77524173 \n python keyboard: https://pypi.org/project/keyboard/ \n 檔案下載: https://drive.google.com/file/d/1YFLVRqNlsWANDY5gSvgL9psDuhLE96D-/view?usp=sharing \n \n \n # File created by Thibaut Royer, Epitech school\n# thibaut1.royer@epitech.eu\n# It intends to be an example program for the "Two wheels, one arm" educative project.\n\nimport sim as vrep\nimport math\nimport random\nimport time\nimport keyboard\n\nprint (\'Start\')\n\n# Close eventual old connections\nvrep.simxFinish(-1)\n# Connect to V-REP remote server\nclientID = vrep.simxStart(\'192.168.0.4\', 19997, True, True, 5000, 5)\n\nif clientID != -1:\n    print (\'Connected to remote API server\')\n    \n    res = vrep.simxAddStatusbarMessage(\n        clientID, "40823218",\n        vrep.simx_opmode_oneshot)\n    if res not in (vrep.simx_return_ok, vrep.simx_return_novalue_flag):\n        print("Could not add a message to the status bar.")\n\n    # Communication operating mode with the remote API : wait for its answer before continuing (blocking mode)\n    # http://www.coppeliarobotics.com/helpFiles/en/remoteApiConstants.htm\n    opmode = vrep.simx_opmode_oneshot_wait\n    STREAMING = vrep.simx_opmode_streaming\n\n    # Try to retrieve motors and robot handlers\n    # http://www.coppeliarobotics.com/helpFiles/en/remoteApiFunctionsPython.htm#simxGetObjectHandle\n    vrep.simxStartSimulation(clientID, opmode)\n    ret,major_handle=vrep.simxGetObjectHandle(clientID,"main_joint",opmode)\n    ret,minor_handle=vrep.simxGetObjectHandle(clientID,"Revolute_joint",opmode)\n    ret,minor2_handle=vrep.simxGetObjectHandle(clientID,"Revolute_joint1",opmode)\n    while True:\n        #Clockwise\n        if keyboard.is_pressed("w"):\n         vrep.simxSetJointTargetVelocity(clientID,major_handle,2,opmode)\n        #anti-Clockwise \n        if keyboard.is_pressed("s"):\n         vrep.simxSetJointTargetVelocity(clientID,major_handle,-2,opmode)\n        #stop\n        if keyboard.is_pressed ("space"):\n         vrep.simxSetJointTargetVelocity(clientID,major_handle,0,opmode)\n\n\nelse:\n    print (\'Failed connecting to remote API server\')\n    print (\'End\')\n \n', 'tags': '', 'url': 'task2.html'}, {'title': 'W15', 'text': '', 'tags': '', 'url': 'W15.html'}, {'title': '影片字幕整理', 'text': '右下角可開啟字幕', 'tags': '', 'url': '影片字幕整理.html'}]};